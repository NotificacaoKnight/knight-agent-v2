version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: knight_db
      POSTGRES_USER: knight_user
      POSTGRES_PASSWORD: knight_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - knight-network

  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - knight-network

  # Django Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - redis
    environment:
      - DEBUG=False
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=knight_db
      - DB_USER=knight_user
      - DB_PASSWORD=knight_password
      - DB_HOST=postgres
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - media_files:/app/media
      - static_files:/app/staticfiles
    ports:
      - "8000:8000"
    networks:
      - knight-network

  # Celery Worker
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A knight_backend worker -l info
    depends_on:
      - postgres
      - redis
    environment:
      - DEBUG=False
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=knight_db
      - DB_USER=knight_user
      - DB_PASSWORD=knight_password
      - DB_HOST=postgres
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - media_files:/app/media
    networks:
      - knight-network

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A knight_backend beat -l info
    depends_on:
      - postgres
      - redis
    environment:
      - DEBUG=False
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=knight_db
      - DB_USER=knight_user
      - DB_PASSWORD=knight_password
      - DB_HOST=postgres
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./backend:/app
    networks:
      - knight-network

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_AZURE_CLIENT_ID=${AZURE_AD_CLIENT_ID}
      - REACT_APP_AZURE_TENANT_ID=${AZURE_AD_TENANT_ID}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - knight-network

  # Ollama (Optional - for self-hosted LLM)
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - knight-network
    # Uncomment for GPU support
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

volumes:
  postgres_data:
  redis_data:
  media_files:
  static_files:
  ollama_data:

networks:
  knight-network:
    driver: bridge